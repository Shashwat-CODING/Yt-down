name: Build and Release

on:
  push:
    tags:
      - 'v*'
  # Add manual trigger
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      draft:
        description: 'Create a draft release'
        type: boolean
        default: false
      prerelease:
        description: 'Mark as pre-release'
        type: boolean
        default: false

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Build for Windows
      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Build for macOS
      - name: Build macOS
        if: matrix.os == 'macos-latest'
        run: npm run build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Build for Linux
      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload artifacts
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: dist/*.exe

      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: dist/*.dmg

      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: dist/*.AppImage

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts/

      - name: Extract version from tag or input
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "RELEASE_TAG=v${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "DRAFT=${{ github.event.inputs.draft }}" >> $GITHUB_OUTPUT
            echo "PRERELEASE=${{ github.event.inputs.prerelease }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
            echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
            echo "DRAFT=false" >> $GITHUB_OUTPUT
            echo "PRERELEASE=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.RELEASE_TAG }}
          name: YouTube Downloader v${{ steps.get_version.outputs.VERSION }}
          draft: ${{ steps.get_version.outputs.DRAFT }}
          prerelease: ${{ steps.get_version.outputs.PRERELEASE }}
          files: |
            artifacts/windows-artifacts/*.exe
            artifacts/macos-artifacts/*.dmg
            artifacts/linux-artifacts/*.AppImage
          body: |
            ## YouTube Downloader v${{ steps.get_version.outputs.VERSION }}
            
            ### Changes in this release:
            - Add your release notes here
            
            ### Downloads:
            - Windows: YouTube Downloader-setup.exe
            - macOS: YouTube Downloader.dmg
            - Linux: YouTube Downloader.AppImage
